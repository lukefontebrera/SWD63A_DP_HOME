@page "/moviesearch"
@using SharedModels.Models
@inherits MovieBase
@using WebApp.Services

<h3>Enter Movie Name:</h3>
<input @bind="MovieName" />
<button @onclick="LoadMoviesByName">Search Movies</button>

@if (Movies == null)
{
    <h3>Loading Movies...</h3>
}
else
{
    <h3 class="mb-5">Movies</h3>

    var moviesCount = Movies.Count();

    @if (moviesCount > 0)
    {
        const int moviesPerRow = 3;
        var moviesRowList = new List<MovieDTO>();

        @for (int i = 0; i < moviesCount; i++)
        {
            moviesRowList = Movies.Skip(i * moviesPerRow).Take(moviesPerRow).ToList();

            <div class="row mt-3">

                @foreach (var item in moviesRowList)
                {
                    <div class="col-md-3 mb-2">
                        <a href="#">
                            <div class="card">
                                <img class="img-thumbnail" src="@item.PictureUri" />
                                <div class="card-body">
                                    <h5 class="card-title mb-3">
                                        @item.Title
                                    </h5>
                                    <p class="card-text">
                                        <b>$@item.Price.ToString()</b>
                                    </p>
                                    <p class="card-text">
                                        <b>Description:</b> @item.Description
                                    </p>
                                    <p class="card-text">
                                        <b>Caption:</b> @item.Caption
                                    </p>
                                    <p class="card-text">
                                        <b>Release Year:</b> @item.ReleaseYear
                                    </p>
                                    @if (item.ReleaseDate.HasValue)
                                    {
                                        <p class="card-text">
                                            <b>Release Date:</b> @item.ReleaseDate.Value.ToShortDateString()
                                        </p>
                                    }
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-primary" @onclick="()=>OrderMovie(item.Id)">Order</button>
                                        <button type="button" class="btn btn-secondary" @onclick="()=>AddToWatchList(item.Id)">Add to WatchList</button>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
    }
}

@code {
    [Inject]
    public IBasketService BasketService { get; set; }

    private async Task OrderMovie(string movieId)
    {
        var movie = Movies.FirstOrDefault(m => m.Id == movieId);
        if (movie != null)
        {
            var basketItem = new BasketItemDTO
                {
                    PictureUri = movie.PictureUri,
                    MovieId = movie.Id,
                    Title = movie.Title,
                    UnitPrice = movie.Price
                };

            await BasketService.AddToBasket(basketItem);
        }
    }

    private void AddToWatchList(string movieId)
    {
        // Implement adding to watchlist logic here
    }
}