@page "/upcoming"
@using SharedModels.Models
@inherits MovieBase
@using WebApp.Services
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserService UserService
@inject NavigationManager Navigation
@using System.Security.Claims

@if (isAdmin)
{
    <h3>Load Upcoming Entities</h3>
    <button @onclick="LoadUpcoming">Load</button>

    @if (Movies == null)
    {
        <h3>Loading Upcoming...</h3>
    }
    else
    {
        <h3 class="mb-5">Upcoming Entities</h3>

        var moviesCount = Movies.Count();

        @if (moviesCount > 0)
        {
            const int moviesPerRow = 3;
            var moviesRowList = new List<MovieDTO>();

            @for (int i = 0; i < moviesCount; i++)
            {
                moviesRowList = Movies.Skip(i * moviesPerRow).Take(moviesPerRow).ToList();

                <div class="row mt-3">
                    @foreach (var item in moviesRowList)
                    {
                        <div class="col-md-3 mb-2">
                            <a href="#">
                                <div class="card">
                                    <img class="img-thumbnail" src="@item.PictureUri" />
                                    <div class="card-body">
                                        <h5 class="card-title mb-3">
                                            @item.Title
                                        </h5>
                                        <p class="card-text">
                                            <b>EUR @item.Price.ToString()</b>
                                        </p>
                                        <p class="card-text">
                                            <b>Description:</b> @item.Description
                                        </p>
                                        <p class="card-text">
                                            <b>Caption:</b> @item.Caption
                                        </p>
                                        <p class="card-text">
                                            <b>Release Year:</b> @item.ReleaseYear
                                        </p>
                                        @if (item.ReleaseDate.HasValue)
                                        {
                                            <p class="card-text">
                                                <b>Release Date:</b> @item.ReleaseDate.Value.ToShortDateString()
                                            </p>
                                        }
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-primary" @onclick="()=>NotifyUser(item.Id)">Notify Users</button>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                </div>
            }
        }
    }
}
else
{
    <h3>You do not have permission to view this page.</h3>
}

@code {
    private bool isAdmin = false;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        if (user.Identity.IsAuthenticated)
        {
            var emailClaim = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email);
            if (emailClaim != null)
            {
                var email = emailClaim.Value;
                if (email == "admin@admin.com")
                {
                    isAdmin = true;
                }
                User = await UserService.GetUserByEmailAsync(email);
            }
        }
    }

    private async Task LoadUpcoming()
    {
        if (isAdmin)
        {
            Movies = await MovieService.GetUpcoming();
        }
    }

    private UserDTO User;

    private async Task NotifyUser(string movieId)
    {
        var movie = Movies.FirstOrDefault(m => m.Id == movieId);
        if (movie != null)
        {
            var item = new MovieDTO
                {
                    Title = movie.Title,
                    Description = movie.Description,
                    Caption = movie.Description,
                    Price = movie.Price,
                    PictureUri = movie.PictureUri,
                    ReleaseYear = movie.ReleaseYear,
                    ReleaseDate = movie.ReleaseDate
                };

            await MovieService.AddUpcoming(item);
        }
    }
}
